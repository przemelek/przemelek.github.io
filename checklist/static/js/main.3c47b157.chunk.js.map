{"version":3,"sources":["logo.svg","StorageService.js","Checklist.js","List.js","View.js","Edit.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StorageService","list","p","localStorage","getItem","item","JSON","parse","push","id","name","items","itemStr","filter","x","length","stringify","Checklist","props","console","log","state","text","join","save","bind","onNewLetterName","onNewLetterText","document","title","this","event","setState","target","value","getElementById","itemId","Date","store","split","loc","location","toString","newLoc","substring","indexOf","elems","Math","random","back","to","edit","type","style","fontSize","onChange","checklistId","rows","cols","Button","onClick","i","label","for","Checkbox","Component","List","newId","element","idToDelete","getAttribute","window","confirm","removeItem","getCheclists","widht","padding","float","delete","Fab","margin","top","right","bottom","left","position","add","color","aria-label","View","pathname","lastIndexOf","getChecklist","Edit","App","path","component","exact","from","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3c47b157.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nexport class StorageService {\n\n    getCheclists() {\n        var list = [];\n        for (var p in localStorage) {\n            if (localStorage.getItem(p)!=null) {\n                var item = JSON.parse(localStorage.getItem(p));\n                list.push({\n                    id: p,\n                    name: item.name,\n                    items: item.items\n                });\n            }\n        }\n        return list;\n    }\n\n    getChecklist(id) {\n        var itemStr = localStorage.getItem(id);\n        var item=itemStr!=null?JSON.parse(itemStr):{name:\"\",items:[]};\n        item.items = item.items.filter(x => x.length>0);\n        return item;\n    }\n\n    store(id, item) {\n        localStorage[id]=JSON.stringify(item);\n    }\n\n}","import React from 'react';\nimport {Component} from \"react\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport {StorageService} from \"./StorageService\";\n\n\nexport class Checklist extends Component {\n\n    constructor(props) {\n        super(props);\n        console.log(props);\n        this.state = {\n                name : props.name,\n                text: props.items.join(\"\\n\")\n            };\n        this.save = this.save.bind(this);\n        this.onNewLetterName = this.onNewLetterName.bind(this);\n        this.onNewLetterText = this.onNewLetterText.bind(this);\n    }\n\n    componentDidMount() {\n        document.title=this.props.name;\n    }\n\n    onNewLetterName(event) {\n        this.setState({name: event.target.value});\n    }\n\n    onNewLetterText(event) {\n        this.setState({text: event.target.value});\n    }\n\n    save() {\n        var element = document.getElementById(\"checklistContent\");\n        var text = element.value;\n        var id = this.props.itemId;\n        var name = document.getElementById(\"checklistName\").value;\n        if (id==\"newOneMarker\") {\n            id = new Date()*1;\n        }\n        new StorageService().store(id, {name:name, items:text.split(\"\\n\")});\n        var loc = document.location.toString();\n        var newLoc = loc.substring(0, loc.indexOf(\"#\")-1)+\"/#\";\n        document.location=newLoc;\n\n    }\n\n    render() {\n        var elems = [];\n        var id = Math.random()+new Date()\n        var items = this.props.items||[];\n        var name = this.props.name || \"\";\n        let back = <div><br /><Link to=\"/list\">&lt;&lt; Back</Link></div>;\n        // var text = encodeURIComponent(JSON.stringify(items));\n        if (this.props.edit) {\n            return <div>Name:<input id=\"checklistName\" type=\"text\" value={this.state.name} style={{fontSize:\"2em\"}} onChange={this.onNewLetterName} /><br />\n                <textarea id=\"checklistContent\" checklistId={id} rows={20} cols={50} style={{fontSize:\"1em\"}} value={this.state.text} onChange={this.onNewLetterText}></textarea><br /><Button onClick={this.save}>Save</Button>{back}</div>\n        } else {\n            for (var i = 0; i < items.length; i++) {\n                var label = items[i];\n                if (this.props.edit) {\n                    label = <input type=\"text\" value={label}></input>;\n                } else {\n                    label = <label for={id + \"item_\" + i}>{label}</label>\n                }\n                elems.push(<div><Checkbox id={id + \"item_\" + i} label={\"item \" + i}></Checkbox>{label}</div>)\n            }\n            return <div><h1>{this.props.name}</h1>{elems}{back}</div>;\n        }\n    }\n}","import React from 'react';\nimport {Component} from \"react\";\nimport {StorageService} from \"./StorageService\";\nimport {Link} from \"react-router-dom\";\nimport Fab from '@material-ui/core/Fab';\n\n\nexport class List extends Component {\n    componentDidMount() {\n        document.title=\"Checklists...\";\n    }\n\n    add() {\n        var newId = new Date()*1;\n        var loc = document.location.toString();\n        var newLoc = loc.substring(0, loc.indexOf(\"#\")-1)+\"/#edit/\"+newId;\n        document.location=newLoc;\n    }\n\n    delete(element) {\n        var idToDelete = element.target.getAttribute(\"item\");\n        if (window.confirm(\"Delete?\")) {\n            localStorage.removeItem(idToDelete);\n        }\n    }\n\n    render() {\n        const style = {\n            margin: 0,\n            top: 'auto',\n            right: 20,\n            bottom: 20,\n            left: 'auto',\n            position: 'fixed',\n        };\n        var list = new StorageService().getCheclists();\n        var elems = [];\n        for (var i=0; i<list.length; i++) {\n            elems.push(<div style={{widht:\"100%\",padding:\"10pt\",fontSize:\"1.5em\"}}><Link to={\"/view/\"+list[i].id}>{list[i].name}</Link><span style={{float:\"right\"}}><Link item={list[i].id} onClick={this.delete}>&#x1F5D1;</Link>&nbsp;&nbsp;<Link to={\"/edit/\"+list[i].id}>&#x270E;</Link></span></div>);\n        }\n        return <div id=\"list\">Available checklists:<br />{elems}<Fab style={style} onClick={this.add} color=\"primary\" aria-label=\"add\">+</Fab></div>;\n    }\n}","import React from 'react';\nimport {Component} from \"react\";\nimport {Checklist} from \"./Checklist\";\nimport {StorageService} from \"./StorageService\";\n\nexport class View extends Component {\n    render() {\n        var location = this.props.location.pathname;\n        var id = location.substring(location.toString().lastIndexOf(\"/\")+1);\n        console.log(\"====\");\n        console.log(this.props.location);\n        console.log(id);\n        var item = new StorageService().getChecklist(id);\n        console.log(item);\n        var name = item.name;\n        var items = item.items;\n\n        return (\n            <div>\n                <Checklist name={name} items={items}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {Component} from \"react\";\nimport {Checklist} from \"./Checklist\";\nimport {StorageService} from \"./StorageService\";\n\nexport class Edit extends Component {\n    render() {\n        var location = this.props.location.pathname;\n        var id = location.substring(location.toString().lastIndexOf(\"/\")+1);\n        var item = new StorageService().getChecklist(id) || {name:\"\",items:[]};\n        var name = item.name;\n        var items = item.items;\n\n        return (\n            <div>\n                <Checklist edit={true} name={name} items={items} itemId={id}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Checklist} from \"./Checklist\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link, BrowserRouter, HashRouter, Redirect\n} from \"react-router-dom\";\nimport {List} from \"./List\";\nimport {View} from \"./View\";\nimport {Edit} from \"./Edit\";\n\nfunction App() {\n    console.log(\"App \"+window.location);\n  return (\n      <div>\n      <HashRouter>\n          <Switch>\n              <Route path=\"/list\" component={List}/>\n              <Route path=\"/view/:id\" component={View}/>\n              <Route path=\"/edit/:id\" component={Edit} />\n              <Redirect exact from=\"/\" to=\"/list\"/>\n          </Switch>\n      </HashRouter>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}